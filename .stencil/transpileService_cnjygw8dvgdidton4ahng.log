{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/app-home/app-home.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/app-home/app-home.js","cmps":[{"isLegacy":false,"tagName":"app-home","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"AppHome","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[],"virtualProperties":[],"states":[{"name":"addContents"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-HOME","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/app-home/app-home.css","relativePath":"app-home.css","originalComponentPath":"app-home.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/app-home/app-home.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/app-home/app-home.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":true,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","id","ref","onTouchMove","href","url"],"htmlTagNames":["div","p","a","stencil-route-link","button","h1"],"isUpdateable":true,"potentialCmpRefs":["stencil-route-link"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nexport class AppHome {\r\n    render() {\r\n        return (h(\"div\", { class: 'app-home', id: \"home\", ref: el => this.homepage = el, onTouchMove: e => this.scroll(e) },\r\n            h(\"p\", null,\r\n                \"Welcome to the Stencil App Starter. You can use this starter to build entire apps all with web components using Stencil! Check out our docs on \",\r\n                h(\"a\", { href: 'https://stenciljs.com' }, \"stenciljs.com\"),\r\n                \" to get started.\"),\r\n            h(\"stencil-route-link\", { url: '/profile/stencil' },\r\n                h(\"button\", null, \"Profile page\")),\r\n            h(\"h1\", null, \"Infinite Scroll, vanilla JS\"),\r\n            h(\"div\", { id: \"content\" },\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { class: \"box1\" }),\r\n                h(\"div\", { id: \"addContents\", ref: el => this.addContents = el }),\r\n                h(\"div\", { id: \"loader\", class: \"active\" }, \"LOADING...\"))));\r\n    }\r\n    componentDidLoad() {\r\n        // this.homepage.addEventListener('scroll', ()=>{ console.log(\"scroll\")})\r\n    }\r\n    scroll(e) {\r\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n            // you're at the bottom of the page\r\n            console.log(\"you're at the bottom of the page\");\r\n            let html = this.addContents.innerHTML;\r\n            html += `<div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>\n      <div class=\"box1\"></div>`;\r\n            console.log(e);\r\n        }\r\n        // console.log(e);\r\n        // var y = window.scrollY;\r\n        // var y2 = window.pageYOffset;\r\n        // var y3 = window.innerHeight;\r\n        // var y4 = document.documentElement.clientHeight\r\n        // var y5 = document.body.offsetHeight;\r\n        // console.log(y, y2, y3, y4, y5);\r\n    }\r\n    static get is() { return \"app-home\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"app-home.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"app-home.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"addContents\": {}\r\n    }; }\r\n}\r\n"}