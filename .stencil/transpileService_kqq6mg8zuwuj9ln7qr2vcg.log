{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Observer/ObservableSubject.ts","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Observer/ObservableSubject.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":[],"potentialCmpRefs":[]},"jsText":"export class ObservableObject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    get data() {\r\n        return this.value;\r\n    }\r\n    set data(data) {\r\n        this.value = data;\r\n    }\r\n    addObserver(observer) {\r\n        this.observers.push(observer);\r\n    }\r\n    removeObserver(observer) {\r\n        const i = this.observers.findIndex(ob => ob == observer);\r\n        this.observers.splice(i, 1);\r\n    }\r\n    notifyObservers() {\r\n        this.observers.forEach(observer => observer.update());\r\n    }\r\n}\r\n"}