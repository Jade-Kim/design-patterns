{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Observer/ObserverPattern.ts","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Observer/ObserverPattern.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":[],"potentialCmpRefs":[]},"jsText":"export class Observable {\r\n    constructor() {\r\n        this.observers = []; // An array of observer functions\r\n    }\r\n    subscribe(fn) {\r\n        this.observers.push(fn);\r\n    }\r\n    ;\r\n    unsubscribe(fnToRemove) {\r\n        this.observers = this.observers.filter(fn => fn != fnToRemove);\r\n    }\r\n    ;\r\n    fire() {\r\n        this.observers.forEach(fn => { fn.call(this); });\r\n    }\r\n}\r\n// Check out MyEvent.ts file\r\n"}