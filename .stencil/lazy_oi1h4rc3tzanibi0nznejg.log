import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { Host, h } from "@stencil/core";
import { ArrayIteratorHistory } from '../../global/Iterator/NotificationHistory';
export const Iterator = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.history = new ArrayIteratorHistory();
    }
    render() {
        return (h(Host, null, h("slot", null, h("input", { type: "text", ref: el => this.userInput = el }), h("button", { class: "btn", onClick: _ => this.addToHistory() }, "Add to history"), h("button", { onClick: _ => this.iterateASC() }, "ITERATE starting from the first element"), h("button", { onClick: _ => this.iterateDESC() }, "ITERATE starting from the last element"), h("div", { ref: el => this.result = el }))));
    }
    addToHistory() {
        this.history.push(this.userInput.value);
        this.userInput.value = "";
    }
    iterateASC() {
        const iterator = this.history.createIterator();
        while (iterator.hasNext()) {
            this.result.innerHTML += iterator.current() + "<br/>";
            iterator.next();
        }
    }
    iterateDESC() {
        const iterator = this.history.createIterator(1);
        while (iterator.hasNext) {
            this.result.innerHTML += iterator.current() + "<br/>";
            iterator.next();
        }
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:app-iterator"; }
};
