import{r as t,h as s}from"./p-6450b217.js";class i{constructor(){this.data=[]}push(t){this.data.push(t),console.log(this.data)}pop(){return this.data.pop()}createIterator(t=0){return new i.ArrayIterator(this,t)}}i.ArrayIterator=class{constructor(t,s){this.history=t,this.order=s,0===s?this.index=0:1===s&&(this.index=this.history.data.length-1)}hasNext(){return 0===this.order?this.index<this.history.data.length:1===this.order?this.index>=0:void 0}current(){return this.history.data[this.index]}next(){0===this.order?this.index++:this.index--}};class r{constructor(){this.data=new Array(10).fill(""),Object.seal(this.data),this.count=0}push(t){if(this.count===this.data.length){const s=this.data.slice(1);s.push(t),this.data=s}else this.data[this.count++]=t;console.log(this.data)}pop(){return this.data[--this.count]}createIterator(t=0){return new r.ArrayIterator(this,t)}}r.ArrayIterator=class{constructor(t,s){this.history=t,this.order=s,0===s?this.index=0:1===s&&(this.index=this.history.data.length-1)}hasNext(){return 0===this.order?this.index<this.history.data.length:1===this.order?this.index>=0:void 0}current(){return this.history.data[this.index]}next(){0===this.order?this.index++:this.index--}};const e=class{constructor(s){t(this,s),this.history=new i,this.fixedHistory=new r}render(){return s("div",{class:"margin20"},s("h3",null,"Iterator Pattern"),s("h6",{class:"grayHint"},"- Allows iterating over an object without exposing the object's internal structure"),s("h6",{class:"grayHint"},"- 객체의 내부 구조를 노출하지 않고 객체를 반복하는 설계 방법."),s("br",null),s("h5",null,"Example 1) Array Iterator "),s("input",{type:"text",ref:t=>this.userInput1=t,placeholder:"Type something to save on the history object."}),s("div",{class:"btnDiv"},s("button",{class:"btn",onClick:()=>this.addToHistory()},"Add to history"),s("button",{onClick:()=>this.iterate1ASC(),class:"btn blue"},"ITERATE starting from the first element"),s("button",{onClick:()=>this.iterate1DESC(),class:"btn blue"},"ITERATE starting from the last element")),s("h6",{class:"margin20"},"Array Iterator History Result"),s("div",{ref:t=>this.result1=t,class:"margin20 resultDiv"}),s("hr",null),s("h5",null,"Example 2) Fixed Array Iterator: This history saves only the last 10 elements."),s("input",{type:"text",ref:t=>this.userInput2=t,placeholder:"Type something to save on the history object."}),s("div",{class:"btnDiv"},s("button",{class:"btn teal darken-3",onClick:()=>this.addToFixedHistory()},"Add to fixed history"),s("button",{onClick:()=>this.iterate2ASC(),class:"btn blue darken-3"},"ITERATE starting from the first element"),s("button",{onClick:()=>this.iterate2DESC(),class:"btn blue darken-3"},"ITERATE starting from the last element")),s("h6",{class:"margin20"},"Fixed Array Iterator History Result"),s("div",{ref:t=>this.result2=t,class:"margin20 resultDiv"}),s("pattern-photos",{uml:"iterator-uml.png",imp:"iterator-i.png",cl:"iterator-1.png"}))}addToHistory(){this.history.push(this.userInput1.value),this.userInput1.value=""}iterate1ASC(){const t=this.history.createIterator();for(;t.hasNext();)this.result1.innerHTML+=t.current()+"<br/>",t.next()}iterate1DESC(){const t=this.history.createIterator(1);for(;t.hasNext();)this.result1.innerHTML+=t.current()+"<br/>",t.next()}addToFixedHistory(){this.fixedHistory.push(this.userInput2.value),this.userInput2.value=""}iterate2ASC(){const t=this.fixedHistory.createIterator();for(;t.hasNext();)this.result2.innerHTML+=t.current()+"<br/>",t.next()}iterate2DESC(){const t=this.fixedHistory.createIterator(1);for(;t.hasNext();)this.result2.innerHTML+=t.current()+"<br/>",t.next()}static get style(){return"STYLE_TEXT_PLACEHOLDER:app-iterator"}};export{e as app_iterator};