import{r as t,h as s}from"./p-6450b217.js";class n{constructor(t){this.next=t}handle(t){this.doHandle(t)||null!=this.next&&this.next.handle(t)}}class i extends n{constructor(t){super(t)}doHandle(t){let s="admin"==t.getUsername()&&"1234"==t.getPassword();if(alert("Authentication "+s),!s)return!s}}class e extends n{constructor(t){super(t)}doHandle(t){return alert("Logger "+t),!1}}class r{constructor(t){null!==t&&(this.handler=t)}handle(t){this.handler.handle(t)}}class a{constructor(t,s){this.username=t,this.password=s}getUsername(){return this.username}getPassword(){return this.password}}const l=class{constructor(s){t(this,s),this.logger=new e(null),this.authenticator=new i(this.logger),this.server=new r(this.authenticator)}render(){return s("div",{class:"margin20"},s("h3",null,"Chain of Responsiblility Pattern"),s("h6",{class:"grayHint"},"- Allows building an order of request objects"),s("h6",{class:"grayHint"},"- 요청을 순서대로 체인화 하고자 할 때 사용하는 패턴"),s("br",null),s("input",{placeholder:"Username: admin",ref:t=>this.username=t}),s("input",{placeholder:"Password: 1234",ref:t=>this.pw=t}),s("button",{class:"waves-effect waves-light btn-large margin20",onClick:()=>this.login()},"Log in"),this.result,s("pattern-photos",{uml:"chain-uml.png",imp:"chain-i.png",cl:"chain-1.png",cl2:"chain-2.png"}))}login(){const t=new a(this.username.value,this.pw.value);this.server.handle(t)}static get style(){return"STYLE_TEXT_PLACEHOLDER:app-chain"}};export{l as app_chain};