{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.js","cmps":[{"isLegacy":false,"tagName":"app-iterator","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Iterator","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[],"virtualProperties":[],"states":[{"name":"result1"},{"name":"result2"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-ITERATOR","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.css","relativePath":"iterator.css","originalComponentPath":"iterator.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","type","ref","placeholder","onClick","uml","imp","cl","cl2"],"htmlTagNames":["div","h3","h5","input","button","h6","hr","pattern-photos"],"isUpdateable":true,"potentialCmpRefs":["pattern-photos"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Iterator/ArrayIteratorHistory","/Users/jadekim/Projects/Practice/design-patterns/src/global/Iterator/FixedArrayIteratorHistory"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/Iterator/ArrayIteratorHistory","../../global/Iterator/FixedArrayIteratorHistory"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport { ArrayIteratorHistory } from '../../global/Iterator/ArrayIteratorHistory';\r\nimport { FixedArrayIteratorHistory } from '../../global/Iterator/FixedArrayIteratorHistory';\r\nexport class Iterator {\r\n    constructor() {\r\n        this.history = new ArrayIteratorHistory();\r\n        this.fixedHistory = new FixedArrayIteratorHistory();\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"margin20\" },\r\n            h(\"h3\", null, \"Iterator Pattern\"),\r\n            h(\"h5\", null, \"Example 1) Array Iterator \"),\r\n            h(\"input\", { type: \"text\", ref: el => this.userInput1 = el, placeholder: \"Type something to save on the history object.\" }),\r\n            h(\"div\", { class: \"btnDiv\" },\r\n                h(\"button\", { class: \"btn\", onClick: _ => this.addToHistory() }, \"Add to history\"),\r\n                h(\"button\", { onClick: _ => this.iterate1ASC(), class: \"btn blue\" }, \"ITERATE starting from the first element\"),\r\n                h(\"button\", { onClick: _ => this.iterate1DESC(), class: \"btn blue\" }, \"ITERATE starting from the last element\")),\r\n            h(\"h6\", { class: \"margin20\" }, \"Array Iterator History Result\"),\r\n            h(\"div\", { ref: el => this.result1 = el, class: \"margin20 resultDiv\" }),\r\n            h(\"hr\", null),\r\n            h(\"h5\", null, \"Example 2) Fixed Array Iterator: This history saves only the last 10 elements.\"),\r\n            h(\"input\", { type: \"text\", ref: el => this.userInput2 = el, placeholder: \"Type something to save on the history object.\" }),\r\n            h(\"div\", { class: \"btnDiv\" },\r\n                h(\"button\", { class: \"btn teal darken-3\", onClick: _ => this.addToFixedHistory() }, \"Add to fixed history\"),\r\n                h(\"button\", { onClick: _ => this.iterate2ASC(), class: \"btn blue darken-3\" }, \"ITERATE starting from the first element\"),\r\n                h(\"button\", { onClick: _ => this.iterate2DESC(), class: \"btn blue darken-3\" }, \"ITERATE starting from the last element\")),\r\n            h(\"h6\", { class: \"margin20\" }, \"Fixed Array Iterator History Result\"),\r\n            h(\"div\", { ref: el => this.result2 = el, class: \"margin20 resultDiv\" }),\r\n            h(\"pattern-photos\", { uml: \"iterator-uml.png\", imp: \"iterator-i.png\", cl: \"iterator-1.png\", cl2: \"iterator-2.png\" })));\r\n    }\r\n    addToHistory() {\r\n        this.history.push(this.userInput1.value);\r\n        this.userInput1.value = \"\";\r\n    }\r\n    iterate1ASC() {\r\n        const iterator = this.history.createIterator();\r\n        while (iterator.hasNext()) {\r\n            this.result1.innerHTML += iterator.current() + \"<br/>\";\r\n            iterator.next();\r\n        }\r\n    }\r\n    iterate1DESC() {\r\n        const iterator = this.history.createIterator(1);\r\n        while (iterator.hasNext()) {\r\n            this.result1.innerHTML += iterator.current() + \"<br/>\";\r\n            iterator.next();\r\n        }\r\n    }\r\n    addToFixedHistory() {\r\n        this.fixedHistory.push(this.userInput2.value);\r\n        this.userInput2.value = \"\";\r\n    }\r\n    iterate2ASC() {\r\n        const iterator = this.fixedHistory.createIterator();\r\n        while (iterator.hasNext()) {\r\n            this.result2.innerHTML += iterator.current() + \"<br/>\";\r\n            iterator.next();\r\n        }\r\n    }\r\n    iterate2DESC() {\r\n        const iterator = this.fixedHistory.createIterator(1);\r\n        while (iterator.hasNext()) {\r\n            this.result2.innerHTML += iterator.current() + \"<br/>\";\r\n            iterator.next();\r\n        }\r\n    }\r\n    static get is() { return \"app-iterator\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"iterator.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"iterator.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"result1\": {},\r\n        \"result2\": {}\r\n    }; }\r\n}\r\n"}