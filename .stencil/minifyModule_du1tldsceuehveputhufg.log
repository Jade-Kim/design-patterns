import{r as t,h as e}from"./p-6450b217.js";class s{store(t){alert("Storing "+t)}}class a{constructor(t){this.storage=t}store(t){const e=this.encrypt(t);this.storage.store(e)}encrypt(t){return"encrypted "+t}}class r{constructor(t){this.storage=t}store(t){const e=this.compress(t);this.storage.store(e)}compress(t){return"compressed "+t}}const n=class{constructor(e){t(this,e)}render(){return e("div",{class:"margin20"},e("h3",null,"Decorator Pattern"),e("h6",{class:"grayHint"},"- Attach additional behaviors to objects using ",e("span",{class:"blueHint"},"wrapper (decorator)")),e("h6",{class:"grayHint"},"- Wrapper (Decorator) 에 기능을 담아 객체에 원하는 추가 기능을 유연하게 넣을 수 있는 설계 패턴이다."),e("input",{placeholder:"Type something here and save data.",ref:t=>this.userInput=t}),e("button",{class:"waves-effect waves-light btn-large margin20",onClick:()=>this.save()},"Save Data"),e("button",{class:"waves-effect waves-light btn-large margin20",onClick:()=>this.saveEncrypted()},"Save Encrypted Data"),e("button",{class:"waves-effect waves-light btn-large margin20",onClick:()=>this.saveCompressed()},"Save Compressed Data"),e("button",{class:"waves-effect waves-light btn-large margin20",onClick:()=>this.saveCompressedEncrypted()},"Save Compressed and Encrypted Data"),e("pattern-photos",{uml:"decorator-uml.png",imp:"decorator-i.png",cl:"decorator.png"}))}save(){(new s).store(this.userInput.value)}saveEncrypted(){new a(new s).store(this.userInput.value)}saveCompressed(){new r(new s).store(this.userInput.value)}saveCompressedEncrypted(){new r(new a(new s)).store(this.userInput.value)}static get style(){return"STYLE_TEXT_PLACEHOLDER:app-decorator"}};export{n as app_decorator};