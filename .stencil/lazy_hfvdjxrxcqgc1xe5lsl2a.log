import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from "@stencil/core";
import { Canvas } from '../../global/State2/Canvas';
import { PaintTool } from '../../global/State2/PaintTool';
import { EraserTool } from '../../global/State2/EraserTool';
import { PencilTool } from '../../global/State2/PencilTool';
export const StatePattern2 = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.canvas = new Canvas;
    }
    render() {
        return (h("div", { class: "margin20" }, h("h3", null, "State Pattern"), h("h5", null, "Select tool"), h("button", { class: "btn-large", onClick: () => this.setPaintTool() }, "Paint Tool"), h("button", { class: "btn-large", onClick: () => this.setEraserTool() }, "Eraser Tool"), h("button", { class: "btn-large", onClick: () => this.setPencilTool() }, "Pencil Tool"), h("h5", null, "Draw in the canvas"), h("div", { ref: el => this.stateCanvas = el, id: "stateCanvas", onMouseDown: _ => this.onMouseDown(), onMouseUp: _ => this.onMouseUp() }, "Canvas"), h("h5", null, "What's going on in the canvas"), h("div", { ref: el => this.result = el })));
    }
    setPaintTool() { this.canvas.setCurrentTool(new PaintTool); }
    setEraserTool() { this.canvas.setCurrentTool(new EraserTool); }
    setPencilTool() { this.canvas.setCurrentTool(new PencilTool); }
    onMouseDown() {
        const tool = this.canvas.getCurrentTool();
        if (tool) {
            const result = this.canvas.mouseDown();
            this.result.innerHTML = result;
        }
        else {
            alert("Please select tool.");
        }
    }
    onMouseUp() {
        const tool = this.canvas.getCurrentTool();
        if (tool) {
            const result = this.canvas.mouseUp();
            this.result.innerHTML = result;
        }
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:app-state2"; }
};
