{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/state/state.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/state/state.js","cmps":[{"isLegacy":false,"tagName":"app-state","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"StatePattern","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[],"virtualProperties":[],"states":[{"name":"result"},{"name":"powerOn"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-STATE","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/state/state.css","relativePath":"state.css","originalComponentPath":"state.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/state/state.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/state/state.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":true,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","onClick","ref"],"htmlTagNames":["div","h3","h5","button","i"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/State/MusicPlayer"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/State/MusicPlayer"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport { MusicPlayer, PowerOn, PowerOff, Playing, Paused } from '../../global/State/MusicPlayer';\r\nexport class StatePattern {\r\n    constructor() {\r\n        this.musicPlayer = new MusicPlayer();\r\n    }\r\n    render() {\r\n        return (h(\"div\", null,\r\n            h(\"h3\", null, \"State Pattern\"),\r\n            h(\"h5\", null, \"Music Player\"),\r\n            h(\"button\", { class: this.powerOn ? \"btn-large\" : \"btn-large red\", onClick: () => this.pressedPower() },\r\n                h(\"i\", { class: \"material-icons\" }, \"power_settings_new\")),\r\n            h(\"button\", { class: \"btn-large\", onClick: () => this.pressedPlay() },\r\n                h(\"i\", { class: \"material-icons\" }, \"play_arrow\")),\r\n            h(\"button\", { class: \"btn-large\", onClick: () => this.pressedPause() },\r\n                h(\"i\", { class: \"material-icons\" }, \"pause\")),\r\n            h(\"div\", { ref: el => this.result = el })));\r\n    }\r\n    pressedPower() {\r\n        const state = this.musicPlayer.getState;\r\n        this.powerOn = state.pressedPower();\r\n        this.powerOn ? this.musicPlayer.setState = new PowerOn() : this.musicPlayer.setState = new PowerOff();\r\n    }\r\n    pressedPlay() {\r\n        const state = this.musicPlayer.getState;\r\n        this.result.innerHTML = state.pressedPlay();\r\n        this.musicPlayer.setState = new Playing();\r\n    }\r\n    pressedPause() {\r\n        const state = this.musicPlayer.getState;\r\n        this.result.innerHTML = state.pressedPause();\r\n        this.musicPlayer.setState = new Paused();\r\n    }\r\n    componentDidLoad() {\r\n        this.musicPlayer.setState = new PowerOff();\r\n    }\r\n    static get is() { return \"app-state\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"state.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"state.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"result\": {},\r\n        \"powerOn\": {}\r\n    }; }\r\n}\r\n"}