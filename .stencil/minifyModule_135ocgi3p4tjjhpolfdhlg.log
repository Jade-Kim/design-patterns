import{r as e,h as a}from"./p-6450b217.js";class t{send(e,a){const t=new s,n=t.connect("ip address here"),c=t.authenticate("ID","KEY");t.send(c,new r(e),a),n.disconnect()}}class s{connect(e){return alert("Connected to the Notification Server "+e),new n}authenticate(e,a){return alert("Authenticated! "+e+" "+a),new c}send(e,a,t){alert("Send message: "+a.content+" to "+t+" auth: "+e)}}class n{disconnect(){alert("Disconnected!")}}class c{}class r{constructor(e){this.content=e}}const i=class{constructor(a){e(this,a)}render(){return a("div",{class:"margin20"},a("h3",null,"Facade Pattern"),a("h6",{class:"grayHint"},"- Facade Pattern provides a simplified, higher-level ",a("span",{class:"blueHint"},"interface")," to a complex library/framework/class."),a("h6",{class:"grayHint"},"- Client 가 복잡한 라이브러리 또는 프레임워크와 직접적으로 소통하는 대신에 Facade 라는 간단한 상위 ",a("span",{class:"blueHint"}," 인터페이스")," 와 소통하여 복잡함을 줄이는 설계 방식이다."),a("h5",null,"Send a notification message App"),a("input",{placeholder:"Message",ref:e=>this.message=e}),a("button",{class:"waves-effect waves-light btn-large margin20",onClick:()=>this.send()},"Send"),a("pattern-photos",{uml:"facade-uml.png",imp:"facade-i.png",cl:"facade.png"}))}send(){(new t).send(this.message.value,"target")}static get style(){return"STYLE_TEXT_PLACEHOLDER:app-facade"}};export{i as app_facade};