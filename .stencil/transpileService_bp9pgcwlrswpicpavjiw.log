{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/observer/observer.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/observer/observer.js","cmps":[{"isLegacy":false,"tagName":"app-observer","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Observer","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[],"virtualProperties":[],"states":[{"name":"result_plugin"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-OBSERVER","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/observer/observer.css","relativePath":"observer.css","originalComponentPath":"observer.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/observer/observer.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/observer/observer.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":true,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","onClick"],"htmlTagNames":["div","h3","button"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Observer/ObservableObject"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/Observer/ObservableObject"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport { rfidPlugin, rfidPluginObserver } from '../../global/Observer/ObservableObject';\r\nexport class Observer {\r\n    render() {\r\n        return (h(\"div\", { class: \"margin20\" },\r\n            h(\"h3\", null, \"Observer Pattern\"),\r\n            h(\"button\", { class: \"btn margin20\", onClick: _ => this.connect() }, \"Connect\"),\r\n            h(\"button\", { class: \"btn margin20\", onClick: _ => this.disconnect() }, \"Disconnect\"),\r\n            h(\"div\", null, this.result_plugin)));\r\n    }\r\n    componentWillLoad() {\r\n        rfidPluginObserver.listener((connection) => this.result_plugin = connection);\r\n        // pluginConnection.listener(\r\n        //   (connection) => this.result_plugin = connection\r\n        // )\r\n    }\r\n    connect() {\r\n        rfidPlugin.data = \"Connected\";\r\n        //pluginConnection.fire(\"Connected\");\r\n    }\r\n    disconnect() {\r\n        rfidPlugin.data = \"Disconnected\";\r\n        //pluginConnection.fire(\"Disconnected\");\r\n    }\r\n    static get is() { return \"app-observer\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"observer.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"observer.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"result_plugin\": {}\r\n    }; }\r\n}\r\n"}