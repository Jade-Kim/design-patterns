{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/decorator/decorator.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/decorator/decorator.js","cmps":[{"isLegacy":false,"tagName":"app-decorator","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Decorator","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[],"virtualProperties":[],"states":[],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-DECORATOR","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/decorator/decorator.css","relativePath":"decorator.css","originalComponentPath":"decorator.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/decorator/decorator.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/decorator/decorator.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":false,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":false,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","placeholder","ref","onClick","uml","imp","cl"],"htmlTagNames":["div","h3","h6","span","input","button","pattern-photos"],"isUpdateable":false,"potentialCmpRefs":["pattern-photos"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Decorator/CloudStream"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/Decorator/CloudStream"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport { Compressed, Encrypted, CloudStorage, } from '../../global/Decorator/CloudStream';\r\nexport class Decorator {\r\n    render() {\r\n        return (h(\"div\", { class: \"margin20\" },\r\n            h(\"h3\", null, \"Decorator Pattern\"),\r\n            h(\"h6\", { class: \"grayHint\" },\r\n                \"- Attach additional behaviors to objects using \",\r\n                h(\"span\", { class: \"blueHint\" }, \"wrapper (decorator)\")),\r\n            h(\"h6\", { class: \"grayHint\" }, \"- Wrapper (Decorator) \\uC5D0 \\uAE30\\uB2A5\\uC744 \\uB2F4\\uC544 \\uAC1D\\uCCB4\\uC5D0 \\uC6D0\\uD558\\uB294 \\uCD94\\uAC00 \\uAE30\\uB2A5\\uC744 \\uC720\\uC5F0\\uD558\\uAC8C \\uB123\\uC744 \\uC218 \\uC788\\uB294 \\uC124\\uACC4 \\uD328\\uD134\\uC774\\uB2E4.\"),\r\n            h(\"input\", { placeholder: \"Type something here and send data.\", ref: el => this.userInput = el }),\r\n            h(\"button\", { class: \"waves-effect waves-light btn-large margin20\", onClick: () => this.send() }, \"Send Data\"),\r\n            h(\"pattern-photos\", { uml: \"decorator-uml.png\", imp: \"decorator-i.png\", cl: \"decorator.png\" })));\r\n    }\r\n    send() {\r\n        const cloudStream = new Compressed(new Encrypted(new CloudStorage()));\r\n        cloudStream.store(this.userInput.value);\r\n    }\r\n    static get is() { return \"app-decorator\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"decorator.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"decorator.css\"]\r\n    }; }\r\n}\r\n"}