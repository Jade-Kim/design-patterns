{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/command/command.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/command/command.js","cmps":[{"isLegacy":false,"tagName":"app-command","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Command","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[],"virtualProperties":[],"states":[{"name":"currentCanvas"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-COMMAND","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/command/command.css","relativePath":"command.css","originalComponentPath":"command.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/command/command.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/command/command.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","onClick","ref","type","placeholder","uml","imp","cl"],"htmlTagNames":["div","h3","h6","h5","button","input","pattern-photos"],"isUpdateable":true,"potentialCmpRefs":["pattern-photos"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Receiver","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/ConcreteCommand","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Invoker","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Composite Command/CLCommands","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Composite Command/CLCommandService","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Composite Command/ComandManager","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Undoable Command/CanvasHistory","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Undoable Command/CanvasDocument","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Undoable Command/UndoableConcreteCommand","/Users/jadekim/Projects/Practice/design-patterns/src/global/Command/Undoable Command/UndoCommand"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/Command/Receiver","../../global/Command/ConcreteCommand","../../global/Command/Invoker","../../global/Command/Composite Command/CLCommands","../../global/Command/Composite Command/CLCommandService","../../global/Command/Composite Command/ComandManager","../../global/Command/Undoable Command/CanvasHistory","../../global/Command/Undoable Command/CanvasDocument","../../global/Command/Undoable Command/UndoableConcreteCommand","../../global/Command/Undoable Command/UndoCommand"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport { UserDBService, ShoppingService } from '../../global/Command/Receiver';\r\nimport { AddUserCommand, GetUserCommand, ShopSellCommand, ShopBuyCommand, SaveCartCommand } from '../../global/Command/ConcreteCommand';\r\nimport { Button } from '../../global/Command/Invoker';\r\nimport { CreateTicketCommand, CreateAddressCommand, CloseTicketCommand } from '../../global/Command/Composite Command/CLCommands';\r\nimport { CommandService } from '../../global/Command/Composite Command/CLCommandService';\r\nimport { CommandManager } from '../../global/Command/Composite Command/ComandManager';\r\nimport { CanvasHistory } from '../../global/Command/Undoable Command/CanvasHistory';\r\nimport { CanvasDocument } from '../../global/Command/Undoable Command/CanvasDocument';\r\nimport { DrawCircleCommand, DrawLineCommand, PaintRedCommand, PaintBlueCommand } from '../../global/Command/Undoable Command/UndoableConcreteCommand';\r\nimport { UndoCommand } from '../../global/Command/Undoable Command/UndoCommand';\r\nexport class Command {\r\n    constructor() {\r\n        this.userDBService = new UserDBService(); // Receiver\r\n        this.shoppingService = new ShoppingService(); // Receiver\r\n        this.button = new Button(); // Invoker\r\n        this.canvasHistory = new CanvasHistory();\r\n        this.doc = new CanvasDocument();\r\n        // **** Example 3\r\n        this.CLService = new CommandService(); // Receiver\r\n        this.CommandManager = new CommandManager(); // Invoker\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"margin20\" },\r\n            h(\"h3\", null, \"Command Pattern\"),\r\n            h(\"h6\", { class: \"grayHint\" }, \"- Turns a request into an object and execute any operation such as delay, queue or undo.\"),\r\n            h(\"h6\", { class: \"grayHint\" }, \"- \\uC694\\uCCAD\\uC744 \\uD558\\uB098\\uC758 \\uAC1D\\uCCB4\\uB85C \\uB9CC\\uB4E4\\uC5B4 \\uC800\\uC7A5\\uD55C \\uB2E4\\uC74C \\uC5EC\\uB7EC\\uAC00\\uC9C0 \\uC694\\uCCAD\\uC744 \\uC2E4\\uD589, \\uC9C0\\uC5F0, \\uC21C\\uC11C\\uB300\\uB85C \\uC2E4\\uD589, \\uC2E4\\uD589 \\uCDE8\\uC18C \\uB4F1\\uC758 \\uC791\\uC5C5\\uC744 \\uD560 \\uC218 \\uC788\\uB2E4.\"),\r\n            h(\"h5\", null, \"Example 1) User DB Service & Shopping Service\"),\r\n            h(\"button\", { class: \"btn margin20\", onClick: _ => this.addUser() }, \"Add User\"),\r\n            h(\"button\", { class: \"btn margin20\", onClick: _ => this.getUser() }, \"Get User Info\"),\r\n            h(\"input\", { ref: el => this.items = el, type: \"text\", placeholder: \"Type items you need to sell/buy/save.\" }),\r\n            h(\"button\", { class: \"btn margin20 cyan\", onClick: _ => this.sell() }, \"Sell\"),\r\n            h(\"button\", { class: \"btn margin20 cyan\", onClick: _ => this.buy() }, \"Buy\"),\r\n            h(\"button\", { class: \"btn margin20 cyan\", onClick: _ => this.saveCart() }, \"Save Cart\"),\r\n            h(\"h5\", null, \"Example 2) Canvas Editor - Undo Mechanism\"),\r\n            h(\"button\", { class: \"btn margin20 blue\", onClick: _ => this.circle() }, \"Draw a circle\"),\r\n            h(\"button\", { class: \"btn margin20 blue\", onClick: _ => this.line() }, \"Draw a line\"),\r\n            h(\"button\", { class: \"btn margin20 blue\", onClick: _ => this.red() }, \"Paint red\"),\r\n            h(\"button\", { class: \"btn margin20 blue\", onClick: _ => this.blue() }, \"Paint blue\"),\r\n            h(\"button\", { class: \"btn margin20 red\", onClick: _ => this.undo() }, \"Undo\"),\r\n            h(\"div\", { class: \"resultDiv margin20\" },\r\n                h(\"h6\", null, \"** Canvas **\"),\r\n                this.currentCanvas),\r\n            h(\"h5\", null, \"Example 3) Add command and execute all commands at once\"),\r\n            h(\"button\", { class: \"btn margin20\", onClick: _ => this.createTicket() }, \"Create ticket\"),\r\n            h(\"button\", { class: \"btn margin20\", onClick: _ => this.createAddress() }, \"Create address\"),\r\n            h(\"button\", { class: \"btn margin20\", onClick: _ => this.closeTicket() }, \"Close ticket\"),\r\n            h(\"button\", { class: \"btn margin20 teal accent-2 black-text\", onClick: _ => this.executeAll() }, \"Execute Commands\"),\r\n            h(\"pattern-photos\", { uml: \"command-uml.png\", imp: \"command-i.png\", cl: \"command.png\" })));\r\n    }\r\n    addUser() {\r\n        const command = new AddUserCommand(this.userDBService); // Concrete Command\r\n        this.button.executeCommand(command);\r\n        console.log(this.button.getCommands);\r\n    }\r\n    getUser() {\r\n        const command = new GetUserCommand(this.userDBService); // Concrete Command\r\n        this.button.executeCommand(command);\r\n        console.log(this.button.getCommands);\r\n    }\r\n    sell() {\r\n        const command = new ShopSellCommand(this.shoppingService); // Concrete Command\r\n        this.button.executeCommand(command, this.items.value);\r\n        console.log(this.button.getCommands);\r\n    }\r\n    buy() {\r\n        const command = new ShopBuyCommand(this.shoppingService); // Concrete Command\r\n        this.button.executeCommand(command, this.items.value);\r\n        console.log(this.button.getCommands);\r\n    }\r\n    saveCart() {\r\n        const command = new SaveCartCommand(this.shoppingService); // Concrete Command\r\n        this.button.executeCommand(command, this.items.value);\r\n        console.log(this.button.getCommands);\r\n    }\r\n    circle() {\r\n        const command = new DrawCircleCommand(this.doc, this.canvasHistory);\r\n        command.execute();\r\n        this.updateCanvasCommand();\r\n    }\r\n    line() {\r\n        const command = new DrawLineCommand(this.doc, this.canvasHistory);\r\n        command.execute();\r\n        this.updateCanvasCommand();\r\n    }\r\n    red() {\r\n        const command = new PaintRedCommand(this.doc, this.canvasHistory);\r\n        command.execute();\r\n        this.updateCanvasCommand();\r\n    }\r\n    blue() {\r\n        const command = new PaintBlueCommand(this.doc, this.canvasHistory);\r\n        command.execute();\r\n        this.updateCanvasCommand();\r\n    }\r\n    undo() {\r\n        const undoCommand = new UndoCommand(this.canvasHistory);\r\n        undoCommand.execute();\r\n        this.updateCanvasCommand();\r\n    }\r\n    updateCanvasCommand() {\r\n        this.currentCanvas = this.doc.getContent;\r\n    }\r\n    createTicket() {\r\n        const cmd = new CreateTicketCommand(this.CLService, { id: \"ticket1\" });\r\n        this.CommandManager.add(cmd);\r\n    }\r\n    closeTicket() {\r\n        const cmd = new CloseTicketCommand(this.CLService, { id: \"ticket2\" });\r\n        this.CommandManager.add(cmd);\r\n    }\r\n    createAddress() {\r\n        const cmd = new CreateAddressCommand(this.CLService, { id: \"address1\" });\r\n        this.CommandManager.add(cmd);\r\n    }\r\n    executeAll() {\r\n        this.CommandManager.executeCommand();\r\n    }\r\n    static get is() { return \"app-command\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"command.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"command.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"currentCanvas\": {}\r\n    }; }\r\n}\r\n"}