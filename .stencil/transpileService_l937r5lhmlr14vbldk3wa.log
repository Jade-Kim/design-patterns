{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/strategy/strategy.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/strategy/strategy.js","cmps":[{"isLegacy":false,"tagName":"app-strategy","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Strategy","elementRef":null,"encapsulation":"none","shadowDelegatesFocus":null,"properties":[],"virtualProperties":[],"states":[{"name":"result"},{"name":"result2"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-STRATEGY","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/strategy/strategy.css","relativePath":"strategy.css","originalComponentPath":"strategy.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/strategy/strategy.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/strategy/strategy.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":true,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["class","type","placeholder","ref","onClick","uml"],"htmlTagNames":["div","h3","h5","input","button","pattern-photos"],"isUpdateable":true,"potentialCmpRefs":["pattern-photos"]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Strategy/Package","/Users/jadekim/Projects/Practice/design-patterns/src/global/Strategy/context","/Users/jadekim/Projects/Practice/design-patterns/src/global/Strategy/concreteStrategy","/Users/jadekim/Projects/Practice/design-patterns/src/global/Strategy2/Image","/Users/jadekim/Projects/Practice/design-patterns/src/global/Strategy2/context","/Users/jadekim/Projects/Practice/design-patterns/src/global/Strategy2/concreteStrategy"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/Strategy/Package","../../global/Strategy/context","../../global/Strategy/concreteStrategy","../../global/Strategy2/Image","../../global/Strategy2/context","../../global/Strategy2/concreteStrategy"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\nimport { Package } from '../../global/Strategy/Package';\r\nimport { Shipping } from '../../global/Strategy/context';\r\nimport { Fedex, UPS, USPS } from '../../global/Strategy/concreteStrategy';\r\nimport { TheImage } from '../../global/Strategy2/Image';\r\nimport { ImageStorage } from '../../global/Strategy2/context';\r\nimport { PngCompressor, SoftFilter } from '../../global/Strategy2/concreteStrategy';\r\nexport class Strategy {\r\n    render() {\r\n        return (h(\"div\", { class: \"margin20\" },\r\n            h(\"h3\", null, \"Strategy Pattern\"),\r\n            h(\"h5\", null, \"Example 1) Calculate shipping cost from different shipping companies \"),\r\n            h(\"div\", { class: \"row\" },\r\n                h(\"div\", { class: \"col s4\" },\r\n                    h(\"input\", { type: \"text\", placeholder: \"From\", ref: el => this.from = el })),\r\n                h(\"div\", { class: \"col s4\" },\r\n                    h(\"input\", { type: \"text\", placeholder: \"To\", ref: el => this.to = el })),\r\n                h(\"div\", { class: \"col s4\" },\r\n                    h(\"input\", { type: \"number\", placeholder: \"Weight (lb)\", ref: el => this.weight = el }))),\r\n            h(\"button\", { class: \"btn\", onClick: _ => this.calculate() }, \"CALCULATE SHIPPING COST\"),\r\n            h(\"div\", { ref: el => this.result = el, class: \"resultDiv margin20\" }),\r\n            h(\"h5\", null, \"Example 2) Store the images that users upload \"),\r\n            h(\"input\", { type: \"text\", placeholder: \"File Name\", ref: el => this.fileName = el }),\r\n            h(\"button\", { class: \"btn\", onClick: _ => this.upload() }, \"UPLOAD PHOTO\"),\r\n            h(\"div\", { ref: el => this.result2 = el, class: \"resultDiv margin20\" }),\r\n            h(\"pattern-photos\", { uml: \"strategy-uml.png\" })));\r\n    }\r\n    calculate() {\r\n        const from = this.from.value;\r\n        const to = this.to.value;\r\n        const weight = Number(this.weight.value);\r\n        const thePackage = new Package(from, to, weight);\r\n        const shipping = new Shipping();\r\n        this.result.innerHTML = \"\";\r\n        this.result.innerHTML += `From ${from} To ${to} <br/> Package ${weight} lb <br/><br/>`;\r\n        shipping.setStrategy(new Fedex());\r\n        this.result.innerHTML += \"Fedex: $\" + shipping.calculate(thePackage) + \"<br/>\";\r\n        shipping.setStrategy(new UPS());\r\n        this.result.innerHTML += \"UPS: $\" + shipping.calculate(thePackage) + \"<br/>\";\r\n        shipping.setStrategy(new USPS());\r\n        this.result.innerHTML += \"USPS: $\" + shipping.calculate(thePackage) + \"<br/>\";\r\n    }\r\n    upload() {\r\n        const img = new TheImage(this.fileName.value);\r\n        const imgStorage = new ImageStorage();\r\n        imgStorage.store(img, new PngCompressor(), new SoftFilter());\r\n        this.result2.innerHTML = \"Check out the developer console.\";\r\n    }\r\n    static get is() { return \"app-strategy\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"strategy.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"strategy.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"result\": {},\r\n        \"result2\": {}\r\n    }; }\r\n}\r\n"}