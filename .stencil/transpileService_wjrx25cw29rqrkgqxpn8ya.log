{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Mediator/MediatorPattern.ts","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Mediator/MediatorPattern.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":[],"potentialCmpRefs":[]},"jsText":"export class Member {\r\n    constructor(name) {\r\n        this.chatroom = null;\r\n        this.name = name;\r\n    }\r\n    send(message, toMember) {\r\n        this.chatroom.send(message, this, toMember);\r\n    }\r\n    receive(message, fromMember) {\r\n        console.log(fromMember.name + \" to \" + this.name + \": \" + message);\r\n        return fromMember.name + \" to \" + this.name + \": \" + message;\r\n    }\r\n}\r\nexport class ChatroomMediator {\r\n    constructor() {\r\n        this.members = {};\r\n    }\r\n    addMember(member) {\r\n        this.members[member.name] = member;\r\n        member.chatroom = this;\r\n    }\r\n    send(message, fromMember, toMember) {\r\n        toMember.receive(message, fromMember);\r\n    }\r\n}\r\n"}