import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from "@stencil/core";
import { UserDBService } from '../../global/Command/Receiver';
import { AddUserCommand, GetUserCommand } from '../../global/Command/ConcreteCommand';
import { Button } from '../../global/Command/Invoker';
export const Command = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
        this.service = new UserDBService();
    }
    render() {
        return (h("div", { class: "margin20" }, h("h3", null, "Command Pattern"), h("button", { class: "btn", onClick: _ => this.addUser() }, "Add User"), h("button", { class: "btn", onClick: _ => this.getUser() }, "Get User Info")));
    }
    addUser() {
        // private service = new UserDBService(); // Receiver
        const command = new AddUserCommand(this.service); // Concrete Command
        const button = new Button(command); // Invoker
        button.click();
    }
    getUser() {
        const command = new GetUserCommand(); // Concrete Command
        const button = new Button(command); // Invoker
        button.click();
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:app-command"; }
};
