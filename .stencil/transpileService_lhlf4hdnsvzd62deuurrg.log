{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/factory/factory.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/factory/factory.js","cmps":[{"isLegacy":false,"tagName":"app-factory","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Factory","elementRef":null,"encapsulation":"shadow","shadowDelegatesFocus":false,"properties":[],"virtualProperties":[],"states":[{"name":"result"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-FACTORY","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/factory/factory.css","relativePath":"factory.css","originalComponentPath":"factory.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/factory/factory.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/factory/factory.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":true,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":true,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["ref"],"htmlTagNames":["slot","button","div"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Factory/EmployeeFactory"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/Factory/EmployeeFactory"],"potentialCmpRefs":[]},"jsText":"import { Host, h } from \"@stencil/core\";\r\nimport { EmployeeFactory } from '../../global/Factory/EmployeeFactory';\r\nexport class Factory {\r\n    render() {\r\n        return (h(Host, null,\r\n            h(\"slot\", null,\r\n                h(\"button\", null),\r\n                h(\"div\", { ref: el => this.result = el }))));\r\n    }\r\n    say(person) {\r\n        this.result.innerHTML += \"Hi, I am \" + person.name + \" and I am a \" + person.type + \"<br/>\";\r\n        //console.log(\"Hi, I am \"+ person.name + \" and I am a \" + person.type);\r\n    }\r\n    componentDidLoad() {\r\n        const employeeFactory = new EmployeeFactory();\r\n        const employees = [];\r\n        employees.push(employeeFactory.create(\"Jade\", 1));\r\n        employees.push(employeeFactory.create(\"John\", 2));\r\n        employees.forEach(person => {\r\n            this.say(person);\r\n        });\r\n    }\r\n    static get is() { return \"app-factory\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"factory.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"factory.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"result\": {}\r\n    }; }\r\n}\r\n"}