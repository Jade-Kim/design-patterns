System.register(["./p-70e1058c.system.js"],(function(t){"use strict";var n,e;return{setters:[function(t){n=t.r;e=t.h}],execute:function(){var i=function(){function t(t,n,e){this.x=t;this.y=n;this.icon=e}t.prototype.draw=function(){alert(this.x+" "+this.y+" "+this.icon.getType())};return t}();var r=function(){function t(t){this.iconFactory=t}t.prototype.getPoints=function(){var t=[];var n=new i(1,1,this.iconFactory.getPointIcon(c.CAFE));t.push(n);return t};return t}();var o=function(){function t(t,n){this.type=t;this.icon=n;console.log(this.icon)}t.prototype.getType=function(){return this.type};return t}();var c;(function(t){t["HOSPITAL"]="HOSPITAL";t["RESTAURANT"]="RESTAURANT";t["CAFE"]="CAFE"})(c||(c={}));var s=function(){function t(){this.icons={}}t.prototype.getPointIcon=function(t){if(!this.icons[t]){var n=new o(t,null);this.icons[t]=n}return this.icons[t]};return t}();var u=t("app_flyweight",function(){function t(t){n(this,t)}t.prototype.render=function(){var t=this;return e("div",{class:"margin20"},e("h3",null,"Flyweight Pattern"),e("h6",{class:"grayHint"},"- Allows sharing common state between multiple objects "),e("h6",{class:"grayHint"},"- 각 객체에 모든 데이터를 저장하지 않고 여러 객체 사이의 공통된 state 를 공유하여 RAM 메모리를 적게 차지하도록 설계하는 패턴이다."),e("button",{class:"btn",onClick:function(n){return t.draw()}},"Draw"),e("pattern-photos",{uml:"flyweight-uml.png",imp:"flyweight-i.png",cl:"flyweight-1.png",cl2:"flyweight-2.png"}))};t.prototype.draw=function(){var t=new r(new s);for(var n=0,e=t.getPoints();n<e.length;n++){var i=e[n];i.draw()}};Object.defineProperty(t,"style",{get:function(){return"STYLE_TEXT_PLACEHOLDER:app-flyweight"},enumerable:true,configurable:true});return t}())}}}));