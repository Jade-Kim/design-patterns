import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { h } from "@stencil/core";
import { rfidPlugin, rfidPluginObserver, checkRfidPlugin } from '../../global/Observer/ObservableObject';
export const Observer = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    render() {
        return (h("div", { class: "margin20" }, h("h3", null, "Observer Pattern"), h("button", { class: "btn margin20", onClick: _ => this.connect() }, "Connect"), h("button", { class: "btn margin20", onClick: _ => this.disconnect() }, "Disconnect"), h("div", null, this.result_plugin)));
    }
    componentWillLoad() {
        rfidPluginObserver.listener((connection) => this.result_plugin = connection);
        // pluginConnection.listener(
        //   (connection) => this.result_plugin = connection
        // )
    }
    componentDidLoad() {
        rfidPlugin.addObserver(rfidPluginObserver);
        checkRfidPlugin();
        //checkConnection();
    }
    connect() {
        rfidPlugin.data = "Connected";
        //pluginConnection.fire("Connected");
    }
    disconnect() {
        rfidPlugin.data = "Disconnected";
        //pluginConnection.fire("Disconnected");
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:app-observer"; }
};
