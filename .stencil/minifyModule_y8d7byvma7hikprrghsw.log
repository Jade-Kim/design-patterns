import{r as s,h as e}from"./p-6450b217.js";class t{pressedPower(){this.currentState.pressedPower()}pressedPlay(){this.currentState.pressedPlay()}pressedPause(){this.currentState.pressedPause()}get getState(){return this.currentState}set setState(s){this.currentState=s}}class r{pressedPower(){return!1}pressedPlay(){return"Playing..."}pressedPause(){return"Pause!"}}class a{pressedPower(){return!0}pressedPlay(){return""}pressedPause(){return""}}class n{pressedPower(){return!1}pressedPlay(){return"Playing..."}pressedPause(){return"Pause!"}}class i{pressedPower(){return!1}pressedPlay(){return"Playing..."}pressedPause(){return"Pause!"}}const l=class{constructor(e){s(this,e),this.musicPlayer=new t}render(){return e("div",{class:"margin20"},e("h3",null,"State Pattern"),e("h6",{class:"grayHint"},"- Lets an object to behave differently depending on the state now"),e("h6",{class:"grayHint"},"- 현재 상태에 따라 같은 이름의 메소드가 다르게 작동하며 Context 는 하나의 State, 즉 하나의 current State 를 가질 수 있다."),e("br",null),e("h5",null,"Music Player"),e("h6",{class:"grayHint"},"- Music Player Buttons behave differently depends on the current state of the music player."),e("h6",{class:"grayHint"},"- 음악 플레이어의 상태에 따라 아래 버튼은 각각 다르게 작동한다."),e("h6",{class:"blueHint"},"- Music Player Current State: ",this.currentState),e("button",{class:this.powerOn?"btn-large margin20":"btn-large margin20 red",onClick:()=>this.pressedPower()},e("i",{class:"material-icons"},"power_settings_new")),e("button",{class:"btn-large margin20",onClick:()=>this.pressedPlay()},e("i",{class:"material-icons"},"play_arrow")),e("button",{class:"btn-large margin20",onClick:()=>this.pressedPause()},e("i",{class:"material-icons"},"pause")),e("pattern-photos",{uml:"state-uml.png",imp:"state-i.png",cl:"state-1.png",cl2:"state-2.png"}))}pressedPower(){this.powerOn=this.musicPlayer.getState.pressedPower(),this.powerOn?(this.musicPlayer.setState=new r,this.currentState="Power On"):(this.musicPlayer.setState=new a,this.currentState="Power Off")}pressedPlay(){this.currentState=this.musicPlayer.getState.pressedPlay(),this.powerOn&&(this.musicPlayer.setState=new n)}pressedPause(){this.currentState=this.musicPlayer.getState.pressedPause(),this.powerOn&&(this.musicPlayer.setState=new i)}componentDidLoad(){this.musicPlayer.setState=new a,this.currentState="Power Off"}static get style(){return"STYLE_TEXT_PLACEHOLDER:app-state"}};export{l as app_state};