{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.tsx","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.js","cmps":[{"isLegacy":false,"tagName":"app-iterator","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"Iterator","elementRef":null,"encapsulation":"shadow","shadowDelegatesFocus":false,"properties":[],"virtualProperties":[],"states":[{"name":"result"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"APP-ITERATOR","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.css","relativePath":"iterator.css","originalComponentPath":"iterator.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.js","sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/components/iterator/iterator.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":false,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":true,"hasVdomRef":true,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":true,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["onClick","ref"],"htmlTagNames":["slot","p","button","div"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Iterator/iterator"],"originalCollectionComponentPath":null,"originalImports":["@stencil/core","../../global/Iterator/iterator"],"potentialCmpRefs":[]},"jsText":"import { Host, h } from \"@stencil/core\";\r\nimport { IteratorPattern } from '../../global/Iterator/iterator';\r\nexport class Iterator {\r\n    constructor() {\r\n        this.items = [1, 2, \"3\", \"4\", true, 1.53];\r\n    }\r\n    render() {\r\n        return (h(Host, null,\r\n            h(\"slot\", null,\r\n                this.items && this.items.map(item => h(\"p\", null, item)),\r\n                h(\"button\", { onClick: _ => this.iterate(this.items) }, \"ITERATE\"),\r\n                h(\"div\", { ref: el => this.result = el }))));\r\n    }\r\n    iterate(items) {\r\n        const iterator = new IteratorPattern(items);\r\n        while (iterator.hasNext()) {\r\n            this.result.innerHTML += iterator.nextItem();\r\n        }\r\n    }\r\n    static get is() { return \"app-iterator\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"iterator.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"iterator.css\"]\r\n    }; }\r\n    static get states() { return {\r\n        \"result\": {}\r\n    }; }\r\n}\r\n"}