{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/State/Tool.ts","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/State/Tool.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":[],"potentialCmpRefs":[]},"jsText":"// export abstract class Tool {\r\n//     public abstract mouseDown(): void;\r\n//     public abstract mouseUp(): void;\r\n// }\r\n// abstract 메소드는 정의할 때는 Implementation 이 없고, 세부 사항(child class)에 들어가서 어떤 기능을 할 지 bottom 에서 결정한다.\r\n"}