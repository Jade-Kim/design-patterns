{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Factory/EmployeeFactory.ts","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Factory/EmployeeFactory.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":["/Users/jadekim/Projects/Practice/design-patterns/src/global/Factory/Developer","/Users/jadekim/Projects/Practice/design-patterns/src/global/Factory/Tester"],"originalCollectionComponentPath":null,"originalImports":["./Developer","./Tester"],"potentialCmpRefs":[]},"jsText":"import { Developer } from \"./Developer\";\r\nimport { Tester } from \"./Tester\";\r\nexport class EmployeeFactory {\r\n    constructor() {\r\n        this.create = (name, type) => {\r\n            switch (type) {\r\n                case 1:\r\n                    return new Developer(name);\r\n                case 2:\r\n                    return new Tester(name);\r\n            }\r\n        };\r\n    }\r\n}\r\n"}