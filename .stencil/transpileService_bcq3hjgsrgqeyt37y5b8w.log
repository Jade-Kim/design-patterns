{"moduleFile":{"sourceFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Proxy/MusicPlayerProxy.ts","jsFilePath":"/Users/jadekim/Projects/Practice/design-patterns/src/global/Proxy/MusicPlayerProxy.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":[],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":[],"potentialCmpRefs":[]},"jsText":"// Proxy\r\nexport class MusicProxy {\r\n    constructor(fileName) {\r\n        this.fileName = fileName;\r\n    }\r\n    play() {\r\n        if (this.myMusic == null) {\r\n            this.myMusic = new MyMusic(this.fileName);\r\n        }\r\n        else {\r\n            alert(\"No need to download \" + this.fileName);\r\n        }\r\n        this.myMusic.play();\r\n    }\r\n    getFileName() {\r\n        return this.fileName;\r\n    }\r\n}\r\n// Concrete Service\r\nexport class MyMusic {\r\n    constructor(fileName) {\r\n        this.fileName = fileName;\r\n        this.download();\r\n    }\r\n    download() {\r\n        alert(\"downloading \" + this.fileName);\r\n    }\r\n    play() {\r\n        alert(\"Play \" + this.fileName);\r\n    }\r\n    getFileName() {\r\n        return this.fileName;\r\n    }\r\n}\r\n// Client\r\nexport class MusicLibrary {\r\n    constructor() {\r\n        this.musicLibrary = {};\r\n    }\r\n    add(music) {\r\n        const fileName = music.getFileName();\r\n        this.musicLibrary[fileName] = music;\r\n    }\r\n    play(fileName) {\r\n        this.musicLibrary[fileName].play();\r\n    }\r\n}\r\n"}