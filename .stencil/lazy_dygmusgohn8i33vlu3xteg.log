import { registerInstance as __stencil_registerInstance } from "@stencil/core";
import { Host, h } from "@stencil/core";
import { ObserverObject } from '../../global/Observer/ObserverPattern';
export const Observer = class {
    constructor(hostRef) {
        __stencil_registerInstance(this, hostRef);
    }
    render() {
        return (h(Host, null, h("slot", null, h("div", { ref: el => this.result = el }))));
    }
    componentWillLoad() {
        const willLoadObserverObject = new ObserverObject();
        willLoadObserverObject.subscribe(this.fn1);
        willLoadObserverObject.subscribe(this.fn2);
        willLoadObserverObject.fire();
    }
    componentDidLoad() {
        const didLoadObserverObject = new ObserverObject();
        didLoadObserverObject.subscribe(this.fn3);
        didLoadObserverObject.subscribe(this.fn4);
        didLoadObserverObject.fire();
    }
    fn1() {
        console.log("fn1");
    }
    fn2() {
        console.log("fn2");
    }
    fn3() {
        console.log("fn3");
    }
    fn4() {
        console.log("fn4");
    }
    static get style() { return "STYLE_TEXT_PLACEHOLDER:app-observer"; }
};
